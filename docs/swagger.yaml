
openapi: 3.0.0
info:
  title: CRM API
  description: The operations that can be performed by the membership-based CRM.
  version: 1.0

paths:
  /clients:
    get:
      parameters:
        - in: query
          name: search
          required: false
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  page:
                    $ref: '#/components/schemas/Page'
                  clients:
                    $ref: '#/components/schemas/Client'
    post:
      responses:
        200:
          $ref: '#/components/responses/Client200'
  /clients/{id}:
    parameters:
      - $ref: '#/components/parameters/id'
    get:
      responses:
        200:
          $ref: '#/components/responses/Client200'
    patch:
      requestBody:
        $ref: '#/components/schemas/Client'
      responses:
        200:
          $ref: '#/components/responses/Client200'
    delete:
      responses:
        200:
          $ref: '#/components/responses/Client200'
  /clients/{id}/orders:
    parameters:
      - $ref: '#/components/parameters/id'
    get:
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  page:
                    $ref: '#/components/schemas/Page'
                  orders:
                    $ref: '#/components/schemas/Order'
  /orders:
    get:
      parameters:
        - in: query
          name: client_id
          schema:
            type: integer
          required: false
        - in: query
          name: completed
          schema:
            type: boolean
          required: false
        - in: query
          name: start_date
          schema:
            type: string
            format: date
          required: false
        - in: query
          name: end_date
          schema:
            type: string
            format: date
          required: false
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  page:
                    $ref: '#/components/schemas/Page'
                  orders:
                    $ref: '#/components/schemas/Order'
    post:
      responses:
        200:
          $ref: '#/components/responses/Order200'
  /orders/{id}:
    patch:
      parameters:
        - $ref: '#/components/schemas/Order'
      responses:
        200:
          $ref: '#/components/responses/Order200'
    delete:
      responses:
        200:
          $ref: '#/components/responses/Order200'
    get:
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Order'
                  - type: object
                    properties:
                      items:
                        type: array
                        items:
                          $ref: '#/components/schemas/OrderItem'

components:
  parameters:
    id:
      name: id
      required: true
      in: path
  responses:
    Client200:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Client'
    Order200:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Order'
  schemas:
    Client:
      allOf:
        - $ref: '#/components/schemas/ClientStub'
        - type: object
          properties:
            contact_name:
              type: string
              example: Dezza McSmith
            contact_email:
              type: string
              format: email
              example: dezza@hotmail.com
            contact_phone:
              type: string
              example: "0438238746"
            description:
              type: string
            is_member:
              type: boolean
              example: true
            membership_expiry:
              type: string
              format: date
    ClientStub:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        company_name:
          type: string
          example: Dezza's Fish and Chips
      required:
        - company_name
    Order:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        date:
          type: string
          format: date
        client:
          allOf:
            - $ref: '#/components/schemas/ClientStub'
            - readOnly: true
        client_id:
          type: integer
          writeOnly: true
        order_total:
          type: integer
          example: 51000
        is_complete:
          type: boolean
          example: false
      required:
        - date
        - cli
    OrderItem:
      type: object
      properties:
        product:
          allOf:
            - $ref: '#/components/schemas/ProductStub'
            - readOnly: true
        product_id:
          type: integer
          writeOnly: true
        quantity:
          type: integer
          example: 2
        price_per_unit:
          type: integer
          example: 1000
        subtotal:
          type: integer
          example: 2000
    Membership:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          example: Standard 12 Month Membership
        price:
          type: integer
          example: 10000
        length:
          type: string
          example: "12 month"
    Page:
      type: object
      properties:
        total_results:
          type: integer
          example: 1249
        page_number:
          example: 1
        results_per_page:
          example: 50
        total_pages:
          example: 25
    Product:
      allOf:
        - $ref: '#/components/schemas/ProductStub'
        - type: object
          properties:
            description:
              type: string
            member_price:
              type: integer
              example: 40000
            non_member_price:
              type: integer
              example: 50000
          required:
            - non_member_price
    ProductStub:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          example: Squid Rings and Chips
      required:
        - name


